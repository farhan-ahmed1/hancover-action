name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Minimal top-level permissions
permissions: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout code
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout code
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install markdownlint-cli2
        run: npm install -g markdownlint-cli2

      - name: Lint Markdown files
        run: markdownlint-cli2 --config .markdownlint.json "*.md" "docs/**/*.md" ".github/**/*.md"

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read        # Required to checkout code
      pull-requests: write  # Required for action to comment on PRs
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Build action
        run: npm run build

      - name: Test action with real coverage data (self-test)
        uses: ./
        env:
          COVERAGE_GIST_ID: ${{ secrets.COVERAGE_GIST_ID }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
        with:
          files: coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          thresholds: |
            total:60
            diff:0
          warn-only: true
          comment-mode: update
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout code
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check dist
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build."
            echo "Please run 'npm run build' and commit the changes."
            exit 1
          fi

  integration:
    name: Integration Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [lint, test, build]
    permissions:
      contents: read        # Required to checkout code
      pull-requests: write  # Required for action to comment on PRs
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate sample coverage
        run: |
          mkdir -p coverage/jest coverage/vitest
          
          # Create LCOV file
          cat > coverage/jest/lcov.info << EOF
          SF:src/index.ts
          DA:1,5
          DA:2,0
          DA:3,3
          DA:4,1
          DA:5,0
          end_of_record
          SF:src/utils.ts
          DA:1,10
          DA:2,8
          DA:3,0
          DA:4,5
          end_of_record
          EOF
          
          # Create Cobertura XML
          cat > coverage/vitest/cobertura.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <coverage line-rate="0.7" branch-rate="0.6">
            <packages>
              <package name="components">
                <classes>
                  <class filename="src/components/Button.tsx" line-rate="0.8">
                    <lines>
                      <line number="1" hits="1"/>
                      <line number="2" hits="1"/>
                      <line number="3" hits="0"/>
                      <line number="4" hits="1"/>
                      <line number="5" hits="1"/>
                    </lines>
                  </class>
                </classes>
              </package>
            </packages>
          </coverage>
          EOF

      - name: Build action
        run: npm run build

      - name: Run HanCover Action
        uses: ./
        env:
          COVERAGE_GIST_ID: ${{ secrets.COVERAGE_GIST_ID }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
        with:
          files: |
            coverage/jest/lcov.info
            coverage/vitest/cobertura.xml
          thresholds: |
            total:75
            diff:70
            branches:60
          groups: |
            - name: "Core"
              include: ["src/**"]
              exclude: ["src/**/*.test.*"]
            - name: "Components"  
              include: ["src/components/**"]
          warn-only: true